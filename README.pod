=pod

=head1 NAME

CPAN::Install::Parallel - Install cpan modules faster

=head1 VERSION

version 0.1

=head1 SYNOPSIS

	CPAN::Install::Parallel->run(
		workers  => 16,
		cache    => 1,
		cpanfile => 'dir/cpanfile'
	);


=head1 DESCRIPTION

There are a number of good tools for installing cpan modules via a cpanfile or
a cpan META file, however if you have a very large application installing those
modules can take a very long time.  This module attacks that problem.

First the given cpanfile is parsed to get a list of required modules.  Then a
dependency tree is built using the metacpan api to determain the dependency
relationships.  After the tree is built, a post-order traversal gives us an order
to install where depencies are installed first.  Throw in L<Parallel::Runner>
while we're walking the tree, and we have a relatively sane way to install
modules in parallel.

This approach isn't perfect, you can still run into timing issues where worker A
has started on a module that worker B depends on.  With the current work B will
try to install what A is working on.  

=head1 METHODS

=head2 run

Do the install.  Takes the following options:

=over 2

=item cpanfile

The L<cpanfile> that should be loaded.  Defaults to C<cpanfile>.

=item workers

The number of worker processes to run in parallel.  Defaults to 4.

=item cache

Boolean.  If true the calls to the metacpan api will be cached.  Recommended,
but defaults to false.

=item cache_dir

Cache directory for the above caching option.  Defaults to
C</tmp/cpan-install-parallel>

=back

=head1 TODO

=over 2

=item *

Doesn't actually install yet.

=back

=head1 AUTHORS

    Chris Reinhardt
    crein@cpan.org
    
=head1 COPYRIGHT

This program is free software; you can redistribute
it and/or modify it under the same terms as Perl itself.

The full text of the license can be found in the
LICENSE file included with this module.

=head1 SEE ALSO

L<cpanm>, L<Module::CPANfile>, L<MetaCPAN::Client>

=cut
